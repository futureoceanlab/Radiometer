#include <Arduino.h>

#define ESTCUTOFF_LIN 1
#define ESTCUTOFF_LOW 20
#define ESTCUTOFF_HIGH 70

#define INVLUTSTEP 10
#define LUTSTEP 0.1F
#define LUTOFFSET_LOW 5
#define LUTOFFSET_HIGH 0

const float invLUT_lowPulses[2][91] {
    {  98252, 108246, 118240, 128234, 138227, 148221, 158215, 168208, 178202, 188196,
      198189, 208183, 218177, 228170, 238164, 248158, 258151, 268145, 278139, 288138,
      298141, 308148, 318160, 328176, 338197, 348223, 358253, 368288, 378327, 388371,
      398419, 408472, 418530, 428593, 438660, 448731, 458808, 468889, 478974, 489065,
      499160, 509259, 519364, 529473, 539586, 549705, 559828, 569956, 580089, 590226,
      600369, 610516, 620667, 630824, 640985, 651151, 661322, 671498, 681679, 691864,
      702054, 712249, 722449, 732654, 742864, 753078, 763298, 773522, 783751, 793986,
      804225, 814469, 824718, 834971, 845230, 855494, 865763, 876036, 886315, 896599,
      906888, 917181, 927480, 937784, 948093, 958406, 968725, 979049, 989378, 999712,
     1010052},
     {1010052,  1113725,  1217918,  1322637,  1427894,  1533698,  1640058,  1746984,  1854488,  1962580,
      2071272,  2180573,  2290498,  2401058,  2512265,  2624133,  2736675,  2849904,  2963837,  3078487,
      3193869,  3310000,  3426897,  3544577,  3663056,  3782354,  3902491,  4023485,  4145357,  4268130,
      4391823,  4516463,  4642072,  4768677,  4896302,  5024976,  5154727,  5285584,  5417579,  5550747,
      5685118,  5820733,  5957626,  6095837,  6235407,  6376383,  6518809,  6662731,  6808206,  6955284,
      7104022,  7254483,  7406730,  7560833,  7716864,  7874899,  8035021,  8197318,  8361890,  8528829,
      8698252,  8870271,  9045017,  9222620,  9403239,  9587022,  9774160,  9964833, 10159254, 10357665,
     10560305, 10767481, 10979490, 11196702, 11419502, 11648364, 11883781, 12126351, 12376777, 12635839,
     12904477, 13183840, 13475248, 13780390, 14101325, 14440697, 14802013, 15189921, 15611097, 16075416,
     16598860}
};

const float invLUT_hiPulses[7][91] {
    {237615758, 235256488, 233038719, 230937050, 228931735, 227008269, 225152293, 223353912, 221604412, 219897288,
     218226516, 216588773, 214982012, 213405384, 211860373, 210350409, 208880805, 207458411, 206090852, 204785328,
     203547081, 202383495, 201292405, 200276794, 199333190, 198456629, 197644384, 196891059, 196187413, 195535634,
     194923568, 194352367, 193817293, 193313130, 192837429, 192387783, 191961857, 191557396, 191172251, 190804382,
     190453039, 190119909, 189799368, 189489776, 189193692, 188910091, 188633663, 188369803, 188114145, 187865108,
     187627489, 187392464, 187170367, 186948998, 186739702, 186530405, 186332652, 186135144, 185946609, 185760217,
     185579179, 185403266, 185228178, 185062140, 184896103, 184734880, 184578147, 184421413, 184271738, 184123767,
     183975797, 183835578, 183695860, 183556141, 183423502, 183291554, 183159606, 183032865, 182908232, 182783599,
     182661257, 182543511, 182425765, 182308020, 182195227, 182083964, 181972702, 181861440, 181756257, 181651099,
     181545940},
    {181545940, 180574256, 179716199, 178944584, 178247751, 177607982, 177017878, 176468743, 175959228, 175480216,
     175028740, 174602095, 174197810, 173813632, 173447507, 173097561, 172762090, 172439540, 172130797, 171834804,
     171548223, 171269934, 171003955, 170745699, 170493120, 170251980, 170015726, 169786030, 169564180, 169345327,
     169136134, 168928267, 168729433, 168531694, 168342099, 168153151, 167972318, 167791486, 167618428, 167445910,
     167278901, 167114274, 166952340, 166795203, 166638066, 166487439, 166337415, 166189828, 166046560, 165903291,
     165764465, 165627614, 165490764, 165359431, 165228680, 165097929, 164972940, 164847987, 164723034, 164603345,
     164483904, 164364463, 164249129, 164134931, 164020733, 163908896, 163799685, 163690474, 163581361, 163476896,
     163372430, 163267965, 163165392, 163065443, 162965494, 162865546, 162768450, 162672801, 162577152, 162481503,
     162388917, 162297362, 162205808, 162114253, 162025300, 161937645, 161849990, 161762336, 161676220, 161592280,
     161508341},
    {161508341, 160708578, 159976794, 159302002, 158674801, 158089560, 157541710, 157024815, 156536212, 156074390,
     155634310, 155214346, 154812982, 154428964, 154061172, 153707503, 153366869, 153039095, 152722906, 152417273,
     152121341, 151834317, 151555462, 151284810, 151023474, 150768568, 150519518, 150277755, 150042877, 149812465,
     149588044, 149369801, 149154842, 148946384, 148741846, 148540892, 148345835, 148152471, 147965636, 147780341,
     147600148, 147422156, 147248341, 147076939, 146909251, 146743775, 146581975, 146421808, 146265665, 146110237,
     145959531, 145808825, 145662831, 145517351, 145374869, 145234415, 145094997, 144959375, 144823752, 144691631,
     144560655, 144430622, 144304116, 144177610, 144053618, 143931411, 143809205, 143690607, 143572538, 143454752,
     143340664, 143226576, 143113174, 143002918, 142892662, 142783119, 142676551, 142569984, 142463812, 142360795,
     142257779, 142154762, 142054927, 141955330, 141855733, 141758269, 141661965, 141565661, 141470184, 141377052,
     141283919},
    {141283919, 140398673, 139586145, 138836849, 138140427, 137489573, 136878733, 136302968, 135758138, 135243153,
     134752071, 134284373, 133836949, 133409320, 132997862, 132603394, 132223868, 131857540, 131503668, 131161545,
     130830772, 130510749, 130200307, 129898898, 129606001, 129321123, 129043795, 128774329, 128511741, 128255599,
     128005514, 127761117, 127522060, 127288415, 127060870, 126837819, 126618972, 126404234, 126195233, 125989722,
     125787463, 125589927, 125396079, 125204880, 125017950, 124834266, 124652698, 124475735, 124300872, 124128669,
     123960064, 123792820, 123629707, 123468033, 123309262, 123152773, 122998213, 122846548, 122696074, 122548887,
     122402378, 122259344, 122116683, 121977494, 121838566, 121702930, 121567626, 121435268, 121303481, 121174140,
     121045768, 120919198, 120794140, 120670108, 120548269, 120426555, 120307841, 120189126, 120072557, 119956878,
     119842136, 119729403, 119616671, 119506436, 119396567, 119287723, 119180634, 119073545, 118968633, 118864246,
     118760338},
    {118760338, 117778275, 116877093, 116046134, 115273759, 114553426, 113877220, 113240276, 112637921, 112067676,
     111525231, 111008098, 110514000, 110040851, 109586844, 109151535, 108732190, 108327305, 107937868, 107560442,
     107196197, 106842325, 106500504, 106168041, 105844907, 105531516, 105226195, 104928615, 104638705, 104356561,
     104081110, 103812081, 103549210, 103292245, 103040945, 102795076, 102554415, 102318746, 102087862, 101861566,
     101639666, 101421979, 101208329, 100998545, 100792467, 100589937, 100390805, 100195422, 100003416,  99814436,
      99628352,  99445039,  99264620,  99087487,  98912807,  98740471,  98570406,  98403607,  98238872,  98076108,
      97915712,  97757907,  97601826,  97447520,  97296025,  97146027,  96997544,  96851787,  96707321,  96564406,
      96423859,  96284415,  96146826,  96011003,  95876112,  95743618,  95612070,  95482041,  95353680,  95226062,
      95100737,  94975993,  94853042,  94731099,  94610406,  94491128,  94372645,  94255901,  94139581,  94025247,
      93911132},
    { 93911132,  92830852,  91841017,  90926555,  90077412,  89284123,  88540302,  87838940,  87176488,  86548005,
      85950254,  85380304,  84835498,  84313917,  83813645,  83332388,  82869572,  82423119,  81991850,  81575376,
      81172243,  80781580,  80402652,  80034767,  79677274,  79329561,  78991053,  78661265,  78340142,  78026774,
      77720704,  77421806,  77129939,  76844207,  76564938,  76291454,  76023603,  75761253,  75504010,  75251779,
      75004398,  74761362,  74523153,  74288878,  74058797,  73832808,  73610407,  73391704,  73176795,  72965163,
      72756723,  72551591,  72349733,  72150795,  71954702,  71761382,  71570772,  71383074,  71197914,  71015231,
      70834961,  70657045,  70481424,  70308040,  70136838,  69967764,  69800765,  69635790,  69472789,  69311712,
      69152514,  68995147,  68839566,  68685729,  68533592,  68383114,  68234255,  68086976,  67941237,  67797003,
      67654237,  67512903,  67372968,  67234397,  67097159,  66961364,  66826908,  66693701,  66561711,  66430911,
      66301272},
    { 66301272,  65066543,  63929401,  62874818,  61890268,  60966462,  60095316,  59270715,  58487348,  57740606,
      57026840,  56342702,  55685525,  55052920,  54442748,  53853093,  53282237,  52728888,  52191583,  51669305,
      51160826,  50665261,  50181838,  49709652,  49247992,  48796201,  48353668,  47919828,  47494155,  47076191,
      46665511,  46261637,  45864168,  45472740,  45087111,  44706837,  44331610,  43961253,  43595380,  43233748,
      42876171,  42522319,  42172040,  41825071,  41481196,  41140255,  40801982,  40466258,  40132836,  39801553,
      39472240,  39144685,  38818755,  38494243,  38170976,  37848804,  37527528,  37206974,  36886972,  36567336,
      36247876,  35928403,  35608720,  35288622,  34967893,  34646310,  34323633,  33999614,  33673987,  33346470,
      33016763,  32684488,  32349336,  32010859,  31668657,  31322197,  30970927,  30614230,  30251391,  29881511,
      29503700,  29116726,  28719248,  28309571,  27885540,  27444525,  26982994,  26496234,  25977620,  25417128,
      24798844}
};

int logfloor (uint32_t n) {
    if (n < 10) return 0;
    if (n < 100) return 1;
    if (n < 1000) return 2;
    if (n < 10000) return 3;
    if (n < 100000) return 4;
    if (n < 1000000) return 5;
    if (n < 10000000) return 6;
    if (n < 100000000) return 7;
    if (n < 1000000000) return 8;
    /*      2147483647 is 2^31-1 - add more ifs as needed
       and adjust this final return as well. */
    return 10;
}

uint32_t LinInterpFixed(float mantissa, const float *LUT) {
  static int LUTindex;
  static float slope, remainder, estimate;
  LUTindex = floorf(INVLUTSTEP*(mantissa-1.F));
  slope = (LUT[LUTindex+1] - LUT[LUTindex])*INVLUTSTEP;
  remainder = mantissa - 1 - LUTindex*LUTSTEP; 
  estimate = LUT[LUTindex] + slope*remainder;
  return static_cast<uint32_t>(estimate+0.5F);
}

uint32_t Photon_Estimator(uint32_t pulses, uint32_t timeHi, int logfreq) {
  static uint32_t photon_estimate;
  static int decade, LUTblock;
  static float mantissa;
  static float pctTimeHi; 
  
  pctTimeHi= 16*timeHi*pow10f((float) logfreq - 7.F); //TODO: Explain this
  if (pctTimeHi < ESTCUTOFF_LIN) {
    photon_estimate = pulses;
  }
  else if (pctTimeHi < ESTCUTOFF_LOW) {
    decade = logfloor(pulses);
    mantissa = pulses/pow10f((float) decade);
    LUTblock = decade + logfreq - LUTOFFSET_LOW;
    photon_estimate = LinInterpFixed(mantissa, invLUT_lowPulses[LUTblock]);
  }
  else if (pctTimeHi < ESTCUTOFF_HIGH) {

  }
  else {
    decade = logfloor(pulses);
    mantissa = pulses/pow10f((float) decade);
    LUTblock = decade + logfreq - LUTOFFSET_HIGH;
    photon_estimate = LinInterpFixed(mantissa, invLUT_hiPulses[LUTblock]);

  }
  return photon_estimate;
}
